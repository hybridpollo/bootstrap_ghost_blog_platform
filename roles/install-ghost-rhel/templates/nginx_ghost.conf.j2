#{{ ansible_managed }}

{% if ghost_enable_ssl is sameas true %}
# Always redirect to the secure site
# if ansible parameter ghost_enable_ssl is set to true

server {
    listen 80;
    listen [::]:80;
    server_name _;
    return 301 https://{{ ghost_site_fqdn }}$request_uri;
    access_log /var/log/nginx/{{ ghost_site_fqdn }}.log;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/pki/tls/certs/{{ ghost_site_fqdn }}.crt;
    ssl_certificate_key /etc/pki/tls/private/{{ ghost_site_fqdn }}.key; 
    access_log /var/log/nginx/ssl-{{ ghost_site_fqdn }}.log;
    error_log /var/log/nginx/ssl-{{ ghost_site_fqdn }}-error.log;
    client_max_body_size 100M;
 
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_pass http://127.0.0.1:{{ ghost_backend_port }};
    } 

    # Addition of directory for static content or assets
    location /static {
        alias /var/www/static/images;
    }
}

{% else %}
# Use non encrypted configuration 
# if ansible parameter ghost_enable_ssl is set to false
server {
    listen 80;
    listen [::]:80;
    server_name _; 
    access_log /var/log/nginx/{{ ghost_site_fqdn }}.log;
    error_log /var/log/nginx/{{ ghost_site_fqdn }}-error.log;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_pass http://127.0.0.1:{{ ghost_backend_port }};
    } 
    # Addition of directory for static content or assets
    location /static {
        alias /var/www/static/images;
    }

}
{% endif %}
