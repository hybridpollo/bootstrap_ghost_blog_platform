---
- name: 'Creating Ghost platform directories'
  file:
    path: /var/www/ghost
    mode: 0755
    state: directory
    owner: '{{ ghost_user }}'
    group: '{{ ghost_group }}'
  tags: ghost-strap

- name: 'Ensure SELinux policy for Nginx'
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  tags: ghost-strap

- name: 'Ensure correct SELinux context on web services directories'
  sefcontext:
    target: '/var/www/(/.*)?'
    setype: httpd_sys_content_t
    state: present
  tags: ghost-strap

- name: 'Apply SELinux file context to filesystem'
  shell: >
    restorecon -irv /var/www
  tags: ghost-strap

- name: 'Ensure base web services started'
  service:
    name: nginx
    state: started 
  loop:
    - nginx
    - mariadb
  tags: ghost-strap

- name: 'Secure MariaDB: Set Root Password to vaulted password'
  mysql_user: 
    name: root
    password: '{{ root_mysql_pass }}'
    host: '{{ item }}'
    state: present 
    check_implicit_admin: yes
    login_user: root
    login_password: '{{ root_mysql_pass }}'
    login_host: localhost
  loop: 
    - 127.0.0.1
    - localhost
  tags: ghost-strap

- name:  'Secure MariaDB: Remove root remote access'
  mysql_user: 
    name: root
    host: '{{ item }}'
    state: absent
    login_user: root
    login_password: '{{ root_mysql_pass }}'
    login_host: localhost
  loop: 
    - '%'    
    - '::1'
    - '{{ host_fqdn }}'
  tags: ghost-strap

- name: 'Secure MariaDB: Remove unused accounts'
  mysql_user: 
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: '{{ root_mysql_pass }}'
    login_host: localhost
  tags: ghost-strap
    
- name: 'Create the ghost database'
  mysql_db:
    name: '{{ ghost_db }}'
    state: present 
    login_user: root
    login_password: '{{ root_mysql_pass }}'
    login_host: localhost
  tags: ghost-strap
 
- name: 'Set MySQL password for the Ghost user: {{ ghost_user }}'
  mysql_user: 
    name: '{{ ghost_user }}'
    password: '{{ ghost_mysql_pass }}'
    login_user: root
    login_password: '{{ root_mysql_pass }}'
    login_host: localhost
    priv: '{{ ghost_db }}.*:ALL'
    state: present 
  loop: 
    - 127.0.0.1
    - localhost
  tags: ghost-strap

#- name: 'Copy the SSL certificates for {{ ghost_site_fqdn }} to the Nginx location'
#  copy:
#    content: '{{ item.content }}'
#    dest: '{{ item.location }}/{{ item.name }}'
#    owner: root
#    group: root
#    mode: 0644
#  loop: '{{ certificates }}'
#  notify: restart_nginx
#  tags: ghost-strap

- name: 'Set up Ghost Nginx Configuration File'
  template:
    src: templates/nginx_ghost.conf.j2
    dest: /etc/nginx/conf.d/nginx_ghost.conf
    owner: root
    group: root
    mode: 0440 
  notify: restart_nginx
  tags: ghost-strap

- name: 'Install the ghost-cli via the npm package manager'
  npm:
    name: ghost-cli
    global: yes
    state: latest
  tags: ghost-strap

- name: '------- INSTALL SUCCESS ----------'
  debug:
    msg: 'XXXX@@ Congratulations - You are now ready to configure Ghost @@XXXX'
  tags: ghost-strap
